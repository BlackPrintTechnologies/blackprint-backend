"""Add BPUserProperty and other models

Revision ID: bbd3938e5c73
Revises: 
Create Date: 2025-03-14 23:59:55.969888

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'bbd3938e5c73'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bp_prop_cache',
    sa.Column('bpc_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('bpc_fid', sa.Integer(), nullable=False),
    sa.Column('bpc_json', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('bpc_created_at', sa.DateTime(), nullable=True),
    sa.Column('bpc_status', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('bpc_id')
    )
    op.create_table('bp_saved_searches',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('search_name', sa.String(length=100), nullable=True),
    sa.Column('search_query', sa.Text(), nullable=True),
    sa.Column('search_value', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('search_response', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('search_status', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bp_users',
    sa.Column('bp_user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('bp_name', sa.String(length=255), nullable=False),
    sa.Column('bp_company', sa.String(length=255), nullable=True),
    sa.Column('bp_industry', sa.String(length=255), nullable=True),
    sa.Column('bp_email', sa.String(length=255), nullable=False),
    sa.Column('bp_password', sa.String(length=255), nullable=False),
    sa.Column('bp_created_on', sa.DateTime(), nullable=True),
    sa.Column('bp_status', sa.Integer(), nullable=True),
    sa.Column('bp_is_onboarded', sa.Integer(), nullable=True),
    sa.Column('bp_user_verified', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('bp_user_id')
    )
    op.create_table('bp_users_questionare',
    sa.Column('bp_user_questionare_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('bp_user_id', sa.Integer(), nullable=True),
    sa.Column('bp_brand_name', sa.String(length=100), nullable=True),
    sa.Column('bp_category', sa.String(length=100), nullable=True),
    sa.Column('bp_product', sa.String(length=100), nullable=True),
    sa.Column('bp_market_segment', sa.String(length=100), nullable=True),
    sa.Column('bp_target_audience', sa.String(length=100), nullable=True),
    sa.Column('bp_competitor_brands', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('bp_complementary_brands', sa.ARRAY(sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('bp_user_questionare_id')
    )
    op.create_table('groups',
    sa.Column('grp_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('grp_name', sa.String(length=100), nullable=False),
    sa.Column('grp_status', sa.Integer(), nullable=False),
    sa.Column('property_ids', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('grp_id')
    )
    with op.batch_alter_table('groups', schema=None) as batch_op:
        batch_op.create_index('idx_user_id_grp_status', ['user_id', 'grp_status'], unique=False)
        batch_op.create_index(batch_op.f('ix_groups_user_id'), ['user_id'], unique=False)

    op.create_table('bp_user_property',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('fid', sa.Integer(), nullable=False),
    sa.Column('user_property_status', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['bp_users.bp_user_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'fid', 'status', name='unique_user_fid_status')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('bp_user_property')
    with op.batch_alter_table('groups', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_groups_user_id'))
        batch_op.drop_index('idx_user_id_grp_status')

    op.drop_table('groups')
    op.drop_table('bp_users_questionare')
    op.drop_table('bp_users')
    op.drop_table('bp_saved_searches')
    op.drop_table('bp_prop_cache')
    # ### end Alembic commands ###
